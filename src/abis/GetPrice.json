{
  "contractName": "GetPrice",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "randomNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "request_id",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "request",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_result",
          "type": "uint256"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_result\",\"type\":\"uint256\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"randomNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"request\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"request_id\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"__callback(bytes32,string)\":{\"details\":\"The following `__callback` functions are just placeholders ideally     meant to be defined in child contract when proofs are used.     The function bodies simply silence compiler warnings.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/mg/bnpl-dapp/src/contracts/GetPrice.sol\":\"GetPrice\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/mg/bnpl-dapp/src/contracts/GetPrice.sol\":{\"keccak256\":\"0xb15e74181d449789c57c30fd917b7d5099a44274902969c0a0aee6677dba50e2\",\"urls\":[\"bzz-raw://5bc88f39f5ad0fdd03a1ccb1cdbc5a26042b4611317ffda827517d293d7b90fe\",\"dweb:/ipfs/QmYdeXJb5jTzZvHpE6CLW1jxcW7KKHk8JCDthM7jBiXZQs\"]},\"/Users/mg/bnpl-dapp/src/contracts/usingOraclize.sol\":{\"keccak256\":\"0xe1c90c4ffde92374bb53483ef438ee1cbea7e2a3bd1de89f8d4ad64e8cc4c772\",\"urls\":[\"bzz-raw://6bbbb5121f0d8d508ddc5cd0a8b0f890ce606f8aef0fb7265b3ff3be7d6a7764\",\"dweb:/ipfs/QmctjmE8XF9dgg5PVxm5uEXyWHQRMgkAsqBFTx6JRBufiq\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506112fd806100756000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806327dc297e14610067578063338cdca11461012c57806338bbfa501461013657806338be706d146102925780635829df43146102c0578063ccbac9f5146102de575b600080fd5b61012a6004803603604081101561007d57600080fd5b8101908080359060200190929190803590602001906401000000008111156100a457600080fd5b8201836020820111156100b657600080fd5b803590602001918460018302840111640100000000831117156100d857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506102fc565b005b61013461033f565b005b6102906004803603606081101561014c57600080fd5b81019080803590602001909291908035906020019064010000000081111561017357600080fd5b82018360208201111561018557600080fd5b803590602001918460018302840111640100000000831117156101a757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561020a57600080fd5b82018360208201111561021c57600080fd5b8035906020019184600183028401116401000000008311171561023e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506103bb565b005b6102be600480360360208110156102a857600080fd5b81019080803590602001909291905050506103de565b005b6102c8610427565b6040518082815260200191505060405180910390f35b6102e661042d565b6040518082815260200191505060405180910390f35b61033b828260006040519080825280601f01601f1916602001820160405280156103355781602001600182028038833980820191505090505b506103bb565b5050565b6103b36040518060400160405280600c81526020017f576f6c6672616d416c70686100000000000000000000000000000000000000008152506040518060400160405280601d81526020017f72616e646f6d206e756d626572206265747765656e203120616e642036000000815250610433565b600681905550565b6000801b600360008060001b815260200190815260200160002081905550505050565b6103e6610979565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461041d57600080fd5b8060058190555050565b60065481565b60055481565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806104bb575060006104b9600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610c96565b145b156104cc576104ca6000610ca1565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561053657600080fd5b505af115801561054a573d6000803e3d6000fd5b505050506040513d602081101561056057600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146106a957600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561062e57600080fd5b505af1158015610642573d6000803e3d6000fd5b505050506040513d602081101561065857600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889856040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561073857808201518184015260208101905061071d565b50505050905090810190601f1680156107655780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b15801561078457600080fd5b505af1158015610798573d6000803e3d6000fd5b505050506040513d60208110156107ae57600080fd5b8101908080519060200190929190505050905062030d403a02670de0b6b3a7640000018111156107e4576000801b915050610973565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663adf59f9982600087876040518563ffffffff1660e01b8152600401808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b8381101561087f578082015181840152602081019050610864565b50505050905090810190601f1680156108ac5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b838110156108e55780820151818401526020810190506108ca565b50505050905090810190601f1680156109125780820380516001836020036101000a031916815260200191505b50955050505050506020604051808303818588803b15801561093357600080fd5b505af1158015610947573d6000803e3d6000fd5b50505050506040513d602081101561095e57600080fd5b81019080805190602001909291905050509150505b92915050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610a01575060006109ff600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610c96565b145b15610a1257610a106000610ca1565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610a7c57600080fd5b505af1158015610a90573d6000803e3d6000fd5b505050506040513d6020811015610aa657600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610bef57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610b7457600080fd5b505af1158015610b88573d6000803e3d6000fd5b505050506040513d6020811015610b9e57600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff1660e01b815260040160206040518083038186803b158015610c5657600080fd5b505afa158015610c6a573d6000803e3d6000fd5b505050506040513d6020811015610c8057600080fd5b8101908080519060200190929190505050905090565b6000813b9050919050565b6000610cab610cb2565b9050919050565b600080610cd2731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed610c96565b1115610d7457731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610d6b6040518060400160405280600b81526020017f6574685f6d61696e6e6574000000000000000000000000000000000000000000815250611209565b60019050611206565b6000610d9373c03a2615d5efaf5f49f60b7bb6583eaec212fdf1610c96565b1115610e355773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610e2c6040518060400160405280600c81526020017f6574685f726f707374656e330000000000000000000000000000000000000000815250611209565b60019050611206565b6000610e5473b7a07bcf2ba2f2703b24c0691b5278999c59ac7e610c96565b1115610ef65773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610eed6040518060400160405280600981526020017f6574685f6b6f76616e0000000000000000000000000000000000000000000000815250611209565b60019050611206565b6000610f1573146500cfd35b22e4a392fe0adc06de1a1368ed48610c96565b1115610fb75773146500cfd35b22e4a392fe0adc06de1a1368ed48600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610fae6040518060400160405280600b81526020017f6574685f72696e6b656279000000000000000000000000000000000000000000815250611209565b60019050611206565b6000610fd673a2998efd205fb9d4b4963afb70778d6354ad3a41610c96565b11156110785773a2998efd205fb9d4b4963afb70778d6354ad3a41600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061106f6040518060400160405280600a81526020017f6574685f676f65726c6900000000000000000000000000000000000000000000815250611209565b60019050611206565b6000611097736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475610c96565b11156110fb57736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611206565b600061111a7320e12a1f859b3feae5fb2a0a32c18f5a65555bbf610c96565b111561117e577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611206565b600061119d7351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa610c96565b1115611201577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611206565b600090505b90565b806002908051906020019061121f929190611223565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061126457805160ff1916838001178555611292565b82800160010185558215611292579182015b82811115611291578251825591602001919060010190611276565b5b50905061129f91906112a3565b5090565b6112c591905b808211156112c15760008160009055506001016112a9565b5090565b9056fea265627a7a7231582062388d6552d19213908db5a33be27f9c1fa55b4cb6e00cdd60256c3ff4f9ca0464736f6c63430005100032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c806327dc297e14610067578063338cdca11461012c57806338bbfa501461013657806338be706d146102925780635829df43146102c0578063ccbac9f5146102de575b600080fd5b61012a6004803603604081101561007d57600080fd5b8101908080359060200190929190803590602001906401000000008111156100a457600080fd5b8201836020820111156100b657600080fd5b803590602001918460018302840111640100000000831117156100d857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506102fc565b005b61013461033f565b005b6102906004803603606081101561014c57600080fd5b81019080803590602001909291908035906020019064010000000081111561017357600080fd5b82018360208201111561018557600080fd5b803590602001918460018302840111640100000000831117156101a757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561020a57600080fd5b82018360208201111561021c57600080fd5b8035906020019184600183028401116401000000008311171561023e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506103bb565b005b6102be600480360360208110156102a857600080fd5b81019080803590602001909291905050506103de565b005b6102c8610427565b6040518082815260200191505060405180910390f35b6102e661042d565b6040518082815260200191505060405180910390f35b61033b828260006040519080825280601f01601f1916602001820160405280156103355781602001600182028038833980820191505090505b506103bb565b5050565b6103b36040518060400160405280600c81526020017f576f6c6672616d416c70686100000000000000000000000000000000000000008152506040518060400160405280601d81526020017f72616e646f6d206e756d626572206265747765656e203120616e642036000000815250610433565b600681905550565b6000801b600360008060001b815260200190815260200160002081905550505050565b6103e6610979565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461041d57600080fd5b8060058190555050565b60065481565b60055481565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806104bb575060006104b9600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610c96565b145b156104cc576104ca6000610ca1565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561053657600080fd5b505af115801561054a573d6000803e3d6000fd5b505050506040513d602081101561056057600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146106a957600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561062e57600080fd5b505af1158015610642573d6000803e3d6000fd5b505050506040513d602081101561065857600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889856040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561073857808201518184015260208101905061071d565b50505050905090810190601f1680156107655780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b15801561078457600080fd5b505af1158015610798573d6000803e3d6000fd5b505050506040513d60208110156107ae57600080fd5b8101908080519060200190929190505050905062030d403a02670de0b6b3a7640000018111156107e4576000801b915050610973565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663adf59f9982600087876040518563ffffffff1660e01b8152600401808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b8381101561087f578082015181840152602081019050610864565b50505050905090810190601f1680156108ac5780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b838110156108e55780820151818401526020810190506108ca565b50505050905090810190601f1680156109125780820380516001836020036101000a031916815260200191505b50955050505050506020604051808303818588803b15801561093357600080fd5b505af1158015610947573d6000803e3d6000fd5b50505050506040513d602081101561095e57600080fd5b81019080805190602001909291905050509150505b92915050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610a01575060006109ff600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610c96565b145b15610a1257610a106000610ca1565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610a7c57600080fd5b505af1158015610a90573d6000803e3d6000fd5b505050506040513d6020811015610aa657600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610bef57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610b7457600080fd5b505af1158015610b88573d6000803e3d6000fd5b505050506040513d6020811015610b9e57600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff1660e01b815260040160206040518083038186803b158015610c5657600080fd5b505afa158015610c6a573d6000803e3d6000fd5b505050506040513d6020811015610c8057600080fd5b8101908080519060200190929190505050905090565b6000813b9050919050565b6000610cab610cb2565b9050919050565b600080610cd2731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed610c96565b1115610d7457731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610d6b6040518060400160405280600b81526020017f6574685f6d61696e6e6574000000000000000000000000000000000000000000815250611209565b60019050611206565b6000610d9373c03a2615d5efaf5f49f60b7bb6583eaec212fdf1610c96565b1115610e355773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610e2c6040518060400160405280600c81526020017f6574685f726f707374656e330000000000000000000000000000000000000000815250611209565b60019050611206565b6000610e5473b7a07bcf2ba2f2703b24c0691b5278999c59ac7e610c96565b1115610ef65773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610eed6040518060400160405280600981526020017f6574685f6b6f76616e0000000000000000000000000000000000000000000000815250611209565b60019050611206565b6000610f1573146500cfd35b22e4a392fe0adc06de1a1368ed48610c96565b1115610fb75773146500cfd35b22e4a392fe0adc06de1a1368ed48600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610fae6040518060400160405280600b81526020017f6574685f72696e6b656279000000000000000000000000000000000000000000815250611209565b60019050611206565b6000610fd673a2998efd205fb9d4b4963afb70778d6354ad3a41610c96565b11156110785773a2998efd205fb9d4b4963afb70778d6354ad3a41600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061106f6040518060400160405280600a81526020017f6574685f676f65726c6900000000000000000000000000000000000000000000815250611209565b60019050611206565b6000611097736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475610c96565b11156110fb57736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611206565b600061111a7320e12a1f859b3feae5fb2a0a32c18f5a65555bbf610c96565b111561117e577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611206565b600061119d7351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa610c96565b1115611201577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611206565b600090505b90565b806002908051906020019061121f929190611223565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061126457805160ff1916838001178555611292565b82800160010185558215611292579182015b82811115611291578251825591602001919060010190611276565b5b50905061129f91906112a3565b5090565b6112c591905b808211156112c15760008160009055506001016112a9565b5090565b9056fea265627a7a7231582062388d6552d19213908db5a33be27f9c1fa55b4cb6e00cdd60256c3ff4f9ca0464736f6c63430005100032",
  "sourceMap": "116:657:2:-;;;213:100;8:9:-1;5:2;;;30:1;27;20:12;5:2;213:100:2;266:42;238:3;;:71;;;;;;;;;;;;;;;;;;116:657;;;;;;",
  "deployedSourceMap": "116:657:2:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;116:657:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15310:122:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15310:122:6;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;15310:122:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;15310:122:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;15310:122:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;15310:122:6;;;;;;;;;;;;;;;:::i;:::-;;316:329:2;;;:::i;:::-;;15438:178:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15438:178:6;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;15438:178:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;15438:178:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;15438:178:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;15438:178:6;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;15438:178:6;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;15438:178:6;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;15438:178:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;15438:178:6;;;;;;;;;;;;;;;:::i;:::-;;648:122:2;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;648:122:2;;;;;;;;;;;;;;;;;:::i;:::-;;184:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;154:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;15310:122:6;15385:40;15396:5;15403:7;15422:1;15412:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;15412:12:6;;;;15385:10;:40::i;:::-;15310:122;;:::o;316:329:2:-;359:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;:63::i;:::-;346:10;:76;;;;316:329::o;15438:178:6:-;15607:1;15599:10;;15562:22;:34;15593:1;15585:10;;15562:34;;;;;;;;;;;:47;;;;15438:178;;;:::o;648:122:2:-;718:20;:18;:20::i;:::-;704:34;;:10;:34;;;696:43;;;;;;759:7;744:12;:22;;;;648:122;:::o;184:25::-;;;;:::o;154:27::-;;;;:::o;15973:353:6:-;16074:11;11838:1;11814:26;;11822:3;;;;;;;;;;;11814:26;;;11813:64;;;;11875:1;11846:25;11866:3;;;;;;;;;;;11846:11;:25::i;:::-;:30;11813:64;11809:130;;;11893:35;11470:1;11893:19;:35::i;:::-;;11809:130;11973:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11973:16:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11973:16:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11973:16:6;;;;;;;;;;;;;;;;11952:37;;11960:8;;;;;;;;;;;11952:37;;;11948:106;;12026:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12026:16:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12026:16:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12026:16:6;;;;;;;;;;;;;;;;12005:8;;:38;;;;;;;;;;;;;;;;;;11948:106;16097:10;16110:8;;;;;;;;;;;:17;;;16128:11;16110:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;16110:30:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16110:30:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16110:30:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16110:30:6;;;;;;;;;;;;;;;;16097:43;;16186:6;16172:11;:20;16162:7;:30;16154:5;:38;16150:104;;;16215:1;16208:8;;;;;;;16150:104;16270:8;;;;;;;;;;;:14;;;16291:5;16298:1;16301:11;16314:4;16270:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;16270:49:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;16270:49:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16270:49:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16270:49:6;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16270:49:6;;;;;;;;;;;;;;;;16263:56;;;12063:1;15973:353;;;;:::o;37170:130::-;37230:24;11838:1;11814:26;;11822:3;;;;;;;;;;;11814:26;;;11813:64;;;;11875:1;11846:25;11866:3;;;;;;;;;;;11846:11;:25::i;:::-;:30;11813:64;11809:130;;;11893:35;11470:1;11893:19;:35::i;:::-;;11809:130;11973:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11973:16:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11973:16:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11973:16:6;;;;;;;;;;;;;;;;11952:37;;11960:8;;;;;;;;;;;11952:37;;;11948:106;;12026:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12026:16:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12026:16:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12026:16:6;;;;;;;;;;;;;;;;12005:8;;:38;;;;;;;;;;;;;;;;;;11948:106;37273:8;;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;37273:20:6;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;37273:20:6;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;37273:20:6;;;;;;;;;;;;;;;;37266:27;;37170:130;:::o;37306:147::-;37365:10;37431:5;37419:18;37410:27;;37396:51;;;:::o;12546:205::-;12611:16;12723:21;:19;:21::i;:::-;12716:28;;12546:205;;;:::o;13025:2047::-;13074:16;13164:1;13106:55;13118:42;13106:11;:55::i;:::-;:59;13102:248;;;13219:42;13191:3;;:71;;;;;;;;;;;;;;;;;;13276:38;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;13335:4;13328:11;;;;13102:248;13421:1;13363:55;13375:42;13363:11;:55::i;:::-;:59;13359:257;;;13484:42;13456:3;;:71;;;;;;;;;;;;;;;;;;13541:39;;;;;;;;;;;;;;;;;;:23;:39::i;:::-;13601:4;13594:11;;;;13359:257;13687:1;13629:55;13641:42;13629:11;:55::i;:::-;:59;13625:252;;;13748:42;13720:3;;:71;;;;;;;;;;;;;;;;;;13805:36;;;;;;;;;;;;;;;;;;:23;:36::i;:::-;13862:4;13855:11;;;;13625:252;13948:1;13890:55;13902:42;13890:11;:55::i;:::-;:59;13886:256;;;14011:42;13983:3;;:71;;;;;;;;;;;;;;;;;;14068:38;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;14127:4;14120:11;;;;13886:256;14213:1;14155:55;14167:42;14155:11;:55::i;:::-;:59;14151:254;;;14275:42;14247:3;;:71;;;;;;;;;;;;;;;;;;14332:37;;;;;;;;;;;;;;;;;;:23;:37::i;:::-;14390:4;14383:11;;;;14151:254;14476:1;14418:55;14430:42;14418:11;:55::i;:::-;:59;14414:204;;;14539:42;14511:3;;:71;;;;;;;;;;;;;;;;;;14603:4;14596:11;;;;14414:204;14689:1;14631:55;14643:42;14631:11;:55::i;:::-;:59;14627:203;;;14751:42;14723:3;;:71;;;;;;;;;;;;;;;;;;14815:4;14808:11;;;;14627:203;14901:1;14843:55;14855:42;14843:11;:55::i;:::-;:59;14839:205;;;14965:42;14937:3;;:71;;;;;;;;;;;;;;;;;;15029:4;15022:11;;;;14839:205;15060:5;15053:12;;13025:2047;;:::o;12757:125::-;12862:13;12838:21;:37;;;;;;;;;;;;:::i;:::-;;12757:125;:::o;116:657:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n//import \"github.com/oraclize/ethereum-api/oraclizeAPI.sol\";\nimport \"./usingOraclize.sol\";\n\ncontract GetPrice is usingOraclize {\n\tuint256 public randomNumber;\n\tbytes32 public request_id;\n\n\tconstructor() public {\n\t\tOAR = OraclizeAddrResolverI(0x6f485C8BF6fc43eA212E93BBF8ce046C7f1cb475);\n\t}\n\n\tfunction request() public {\n\t\trequest_id = oraclize_query(\"WolframAlpha\", \"random number between 1 and 6\");\n\t\t//request_id = oraclize_query(\"URL\",\n  \t\t//\t\t\"json(https://www.koreaexim.go.kr/site/program/financial/exchangeJSON?authkey=5nVgHObpKknHqEjMK1LQ0nA3CZALeAPp&searchdate=20180102&data=AP01&cur_unit=USD).0.deal_bas_r\");\n\n\t}\n\n\tfunction __callback(uint256 _result) public {\n\t\trequire(msg.sender == oraclize_cbAddress());\n\n\t\trandomNumber = _result;\n\t}\n\n}\n\n// pragma solidity ^0.4.25;\n// import \"github.com/oraclize/ethereum-api/oraclizeAPI_0.4.25.sol\";\n\n// contract 환율계산함수 is usingOraclize {\n// string public exchage_rates;\n// event NewOraclizeQuery(string description);\n//      event NewSomeValue(string value);\n// constructor() public {\n//         update();\n//     }\n// function __callback(bytes32 myid, string result) public {\n//         (myid);\n//         require (msg.sender == oraclize_cbAddress());\n//         exchage_rates = result;\n//         emit NewSomeValue(exchage_rates);\n//         // do something with exchage_rates\n//     }\n// function update() public payable {\n//         if (oraclize_getPrice(\"URL\") > address(this).balance) {\n//             emit NewOraclizeQuery(\"Oraclize query was NOT sent, please add some ETH to cover for the query fee\");\n//         } else {\n//             emit NewOraclizeQuery(\"Oraclize query was sent, standing by for the answer exchange_rate\");\n//             oraclize_query(\"URL\", \"[URL, 검색어, 수식 등]\");\n//         }\n//     }\n// }",
  "sourcePath": "/Users/mg/bnpl-dapp/src/contracts/GetPrice.sol",
  "ast": {
    "absolutePath": "/Users/mg/bnpl-dapp/src/contracts/GetPrice.sol",
    "exportedSymbols": {
      "GetPrice": [
        757
      ]
    },
    "id": 758,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 710,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "/Users/mg/bnpl-dapp/src/contracts/usingOraclize.sol",
        "file": "./usingOraclize.sol",
        "id": 711,
        "nodeType": "ImportDirective",
        "scope": 758,
        "sourceUnit": 7565,
        "src": "85:29:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 712,
              "name": "usingOraclize",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 7564,
              "src": "137:13:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingOraclize_$7564",
                "typeString": "contract usingOraclize"
              }
            },
            "id": 713,
            "nodeType": "InheritanceSpecifier",
            "src": "137:13:2"
          }
        ],
        "contractDependencies": [
          7564
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 757,
        "linearizedBaseContracts": [
          757,
          7564
        ],
        "name": "GetPrice",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 715,
            "name": "randomNumber",
            "nodeType": "VariableDeclaration",
            "scope": 757,
            "src": "154:27:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 714,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "154:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 717,
            "name": "request_id",
            "nodeType": "VariableDeclaration",
            "scope": 757,
            "src": "184:25:2",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 716,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "184:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 726,
              "nodeType": "Block",
              "src": "234:79:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 724,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 720,
                      "name": "OAR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1930,
                      "src": "238:3:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$1392",
                        "typeString": "contract OraclizeAddrResolverI"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "307836663438354338424636666334336541323132453933424246386365303436433766316362343735",
                          "id": 722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "266:42:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          "value": "0x6f485C8BF6fc43eA212E93BBF8ce046C7f1cb475"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 721,
                        "name": "OraclizeAddrResolverI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1392,
                        "src": "244:21:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OraclizeAddrResolverI_$1392_$",
                          "typeString": "type(contract OraclizeAddrResolverI)"
                        }
                      },
                      "id": 723,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "244:65:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$1392",
                        "typeString": "contract OraclizeAddrResolverI"
                      }
                    },
                    "src": "238:71:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$1392",
                      "typeString": "contract OraclizeAddrResolverI"
                    }
                  },
                  "id": 725,
                  "nodeType": "ExpressionStatement",
                  "src": "238:71:2"
                }
              ]
            },
            "documentation": null,
            "id": 727,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 718,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "224:2:2"
            },
            "returnParameters": {
              "id": 719,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "234:0:2"
            },
            "scope": 757,
            "src": "213:100:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 737,
              "nodeType": "Block",
              "src": "342:303:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 730,
                      "name": "request_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 717,
                      "src": "346:10:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "576f6c6672616d416c706861",
                          "id": 732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "374:14:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_21eff6db3cf423de70b78939a0b320a09532e53b36d8e49779bb3d382f433753",
                            "typeString": "literal_string \"WolframAlpha\""
                          },
                          "value": "WolframAlpha"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "72616e646f6d206e756d626572206265747765656e203120616e642036",
                          "id": 733,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "390:31:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_ee464197dbce995ef97130d184a5f4c49ca5eefec18fe5e808d4fb1dce963a81",
                            "typeString": "literal_string \"random number between 1 and 6\""
                          },
                          "value": "random number between 1 and 6"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_21eff6db3cf423de70b78939a0b320a09532e53b36d8e49779bb3d382f433753",
                            "typeString": "literal_string \"WolframAlpha\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_ee464197dbce995ef97130d184a5f4c49ca5eefec18fe5e808d4fb1dce963a81",
                            "typeString": "literal_string \"random number between 1 and 6\""
                          }
                        ],
                        "id": 731,
                        "name": "oraclize_query",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          2391,
                          2434,
                          2481,
                          2526,
                          2570,
                          2616,
                          2666,
                          2714,
                          2762,
                          2812,
                          2866,
                          2918,
                          2955,
                          2995,
                          3038,
                          3078,
                          3123,
                          3171,
                          3222,
                          3270,
                          3323,
                          3379,
                          3438,
                          3494,
                          3555,
                          3619,
                          3686,
                          3750,
                          3819,
                          3891,
                          3966,
                          4038,
                          4086,
                          4136,
                          4190,
                          4242,
                          4279,
                          4319,
                          4362,
                          4402,
                          4447,
                          4495,
                          4546,
                          4594,
                          4647,
                          4703,
                          4762,
                          4818,
                          4879,
                          4943,
                          5010,
                          5074,
                          5143,
                          5215,
                          5290,
                          5362
                        ],
                        "referencedDeclaration": 2391,
                        "src": "359:14:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (string memory,string memory) returns (bytes32)"
                        }
                      },
                      "id": 734,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "359:63:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "346:76:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 736,
                  "nodeType": "ExpressionStatement",
                  "src": "346:76:2"
                }
              ]
            },
            "documentation": null,
            "id": 738,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "request",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 728,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "332:2:2"
            },
            "returnParameters": {
              "id": 729,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "342:0:2"
            },
            "scope": 757,
            "src": "316:329:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 755,
              "nodeType": "Block",
              "src": "692:78:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 744,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7707,
                            "src": "704:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 745,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "704:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 746,
                            "name": "oraclize_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 5387,
                            "src": "718:18:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 747,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "718:20:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "704:34:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 743,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        7710,
                        7711
                      ],
                      "referencedDeclaration": 7710,
                      "src": "696:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "696:43:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 750,
                  "nodeType": "ExpressionStatement",
                  "src": "696:43:2"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 751,
                      "name": "randomNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 715,
                      "src": "744:12:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 752,
                      "name": "_result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 740,
                      "src": "759:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "744:22:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 754,
                  "nodeType": "ExpressionStatement",
                  "src": "744:22:2"
                }
              ]
            },
            "documentation": null,
            "id": 756,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 741,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 740,
                  "name": "_result",
                  "nodeType": "VariableDeclaration",
                  "scope": 756,
                  "src": "668:15:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 739,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "668:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "667:17:2"
            },
            "returnParameters": {
              "id": 742,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "692:0:2"
            },
            "scope": 757,
            "src": "648:122:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 758,
        "src": "116:657:2"
      }
    ],
    "src": "0:1817:2"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/Users/mg/bnpl-dapp/src/contracts/GetPrice.sol",
      "exportedSymbols": {
        "GetPrice": [
          757
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.5",
            ".0"
          ]
        },
        "id": 710,
        "name": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "attributes": {
          "SourceUnit": 7565,
          "absolutePath": "/Users/mg/bnpl-dapp/src/contracts/usingOraclize.sol",
          "file": "./usingOraclize.sol",
          "scope": 758,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 711,
        "name": "ImportDirective",
        "src": "85:29:2"
      },
      {
        "attributes": {
          "contractDependencies": [
            7564
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            757,
            7564
          ],
          "name": "GetPrice",
          "scope": 758
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "usingOraclize",
                  "referencedDeclaration": 7564,
                  "type": "contract usingOraclize"
                },
                "id": 712,
                "name": "UserDefinedTypeName",
                "src": "137:13:2"
              }
            ],
            "id": 713,
            "name": "InheritanceSpecifier",
            "src": "137:13:2"
          },
          {
            "attributes": {
              "constant": false,
              "name": "randomNumber",
              "scope": 757,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 714,
                "name": "ElementaryTypeName",
                "src": "154:7:2"
              }
            ],
            "id": 715,
            "name": "VariableDeclaration",
            "src": "154:27:2"
          },
          {
            "attributes": {
              "constant": false,
              "name": "request_id",
              "scope": 757,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "bytes32",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "bytes32",
                  "type": "bytes32"
                },
                "id": 716,
                "name": "ElementaryTypeName",
                "src": "184:7:2"
              }
            ],
            "id": 717,
            "name": "VariableDeclaration",
            "src": "184:25:2"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 757,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 718,
                "name": "ParameterList",
                "src": "224:2:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 719,
                "name": "ParameterList",
                "src": "234:0:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract OraclizeAddrResolverI"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 1930,
                              "type": "contract OraclizeAddrResolverI",
                              "value": "OAR"
                            },
                            "id": 720,
                            "name": "Identifier",
                            "src": "238:3:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "contract OraclizeAddrResolverI",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 1392,
                                  "type": "type(contract OraclizeAddrResolverI)",
                                  "value": "OraclizeAddrResolverI"
                                },
                                "id": 721,
                                "name": "Identifier",
                                "src": "244:21:2"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "307836663438354338424636666334336541323132453933424246386365303436433766316362343735",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "address payable",
                                  "value": "0x6f485C8BF6fc43eA212E93BBF8ce046C7f1cb475"
                                },
                                "id": 722,
                                "name": "Literal",
                                "src": "266:42:2"
                              }
                            ],
                            "id": 723,
                            "name": "FunctionCall",
                            "src": "244:65:2"
                          }
                        ],
                        "id": 724,
                        "name": "Assignment",
                        "src": "238:71:2"
                      }
                    ],
                    "id": 725,
                    "name": "ExpressionStatement",
                    "src": "238:71:2"
                  }
                ],
                "id": 726,
                "name": "Block",
                "src": "234:79:2"
              }
            ],
            "id": 727,
            "name": "FunctionDefinition",
            "src": "213:100:2"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "request",
              "scope": 757,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 728,
                "name": "ParameterList",
                "src": "332:2:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 729,
                "name": "ParameterList",
                "src": "342:0:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bytes32"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 717,
                              "type": "bytes32",
                              "value": "request_id"
                            },
                            "id": 730,
                            "name": "Identifier",
                            "src": "346:10:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bytes32",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_21eff6db3cf423de70b78939a0b320a09532e53b36d8e49779bb3d382f433753",
                                      "typeString": "literal_string \"WolframAlpha\""
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_ee464197dbce995ef97130d184a5f4c49ca5eefec18fe5e808d4fb1dce963a81",
                                      "typeString": "literal_string \"random number between 1 and 6\""
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    2391,
                                    2434,
                                    2481,
                                    2526,
                                    2570,
                                    2616,
                                    2666,
                                    2714,
                                    2762,
                                    2812,
                                    2866,
                                    2918,
                                    2955,
                                    2995,
                                    3038,
                                    3078,
                                    3123,
                                    3171,
                                    3222,
                                    3270,
                                    3323,
                                    3379,
                                    3438,
                                    3494,
                                    3555,
                                    3619,
                                    3686,
                                    3750,
                                    3819,
                                    3891,
                                    3966,
                                    4038,
                                    4086,
                                    4136,
                                    4190,
                                    4242,
                                    4279,
                                    4319,
                                    4362,
                                    4402,
                                    4447,
                                    4495,
                                    4546,
                                    4594,
                                    4647,
                                    4703,
                                    4762,
                                    4818,
                                    4879,
                                    4943,
                                    5010,
                                    5074,
                                    5143,
                                    5215,
                                    5290,
                                    5362
                                  ],
                                  "referencedDeclaration": 2391,
                                  "type": "function (string memory,string memory) returns (bytes32)",
                                  "value": "oraclize_query"
                                },
                                "id": 731,
                                "name": "Identifier",
                                "src": "359:14:2"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "576f6c6672616d416c706861",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "string",
                                  "type": "literal_string \"WolframAlpha\"",
                                  "value": "WolframAlpha"
                                },
                                "id": 732,
                                "name": "Literal",
                                "src": "374:14:2"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "72616e646f6d206e756d626572206265747765656e203120616e642036",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "string",
                                  "type": "literal_string \"random number between 1 and 6\"",
                                  "value": "random number between 1 and 6"
                                },
                                "id": 733,
                                "name": "Literal",
                                "src": "390:31:2"
                              }
                            ],
                            "id": 734,
                            "name": "FunctionCall",
                            "src": "359:63:2"
                          }
                        ],
                        "id": 735,
                        "name": "Assignment",
                        "src": "346:76:2"
                      }
                    ],
                    "id": 736,
                    "name": "ExpressionStatement",
                    "src": "346:76:2"
                  }
                ],
                "id": 737,
                "name": "Block",
                "src": "342:303:2"
              }
            ],
            "id": 738,
            "name": "FunctionDefinition",
            "src": "316:329:2"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "__callback",
              "scope": 757,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_result",
                      "scope": 756,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 739,
                        "name": "ElementaryTypeName",
                        "src": "668:7:2"
                      }
                    ],
                    "id": 740,
                    "name": "VariableDeclaration",
                    "src": "668:15:2"
                  }
                ],
                "id": 741,
                "name": "ParameterList",
                "src": "667:17:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 742,
                "name": "ParameterList",
                "src": "692:0:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                7710,
                                7711
                              ],
                              "referencedDeclaration": 7710,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 743,
                            "name": "Identifier",
                            "src": "696:7:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 7707,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 744,
                                    "name": "Identifier",
                                    "src": "704:3:2"
                                  }
                                ],
                                "id": 745,
                                "name": "MemberAccess",
                                "src": "704:10:2"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "address",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        null
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 5387,
                                      "type": "function () returns (address)",
                                      "value": "oraclize_cbAddress"
                                    },
                                    "id": 746,
                                    "name": "Identifier",
                                    "src": "718:18:2"
                                  }
                                ],
                                "id": 747,
                                "name": "FunctionCall",
                                "src": "718:20:2"
                              }
                            ],
                            "id": 748,
                            "name": "BinaryOperation",
                            "src": "704:34:2"
                          }
                        ],
                        "id": 749,
                        "name": "FunctionCall",
                        "src": "696:43:2"
                      }
                    ],
                    "id": 750,
                    "name": "ExpressionStatement",
                    "src": "696:43:2"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 715,
                              "type": "uint256",
                              "value": "randomNumber"
                            },
                            "id": 751,
                            "name": "Identifier",
                            "src": "744:12:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 740,
                              "type": "uint256",
                              "value": "_result"
                            },
                            "id": 752,
                            "name": "Identifier",
                            "src": "759:7:2"
                          }
                        ],
                        "id": 753,
                        "name": "Assignment",
                        "src": "744:22:2"
                      }
                    ],
                    "id": 754,
                    "name": "ExpressionStatement",
                    "src": "744:22:2"
                  }
                ],
                "id": 755,
                "name": "Block",
                "src": "692:78:2"
              }
            ],
            "id": 756,
            "name": "FunctionDefinition",
            "src": "648:122:2"
          }
        ],
        "id": 757,
        "name": "ContractDefinition",
        "src": "116:657:2"
      }
    ],
    "id": 758,
    "name": "SourceUnit",
    "src": "0:1817:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xBBf1019876B09B8B376a2899e97Ac3551164970E",
      "transactionHash": "0x445179a662b718bc61a1908a7044035a109e0b8d9a3fda9ce6da484cfdcd4790"
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-05-16T11:01:10.974Z",
  "devdoc": {
    "methods": {
      "__callback(bytes32,string)": {
        "details": "The following `__callback` functions are just placeholders ideally     meant to be defined in child contract when proofs are used.     The function bodies simply silence compiler warnings."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}