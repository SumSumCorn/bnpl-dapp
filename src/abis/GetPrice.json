{
  "contractName": "GetPrice",
  "abi": [
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "result",
          "type": "uint256"
        }
      ],
      "name": "Action",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "randomNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "request_id",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "request",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_myid",
          "type": "bytes32"
        },
        {
          "internalType": "string",
          "name": "_result",
          "type": "string"
        },
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_result",
          "type": "uint256"
        }
      ],
      "name": "__callback",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"result\",\"type\":\"uint256\"}],\"name\":\"Action\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_myid\",\"type\":\"bytes32\"},{\"internalType\":\"string\",\"name\":\"_result\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_result\",\"type\":\"uint256\"}],\"name\":\"__callback\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"randomNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"request\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"request_id\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"__callback(bytes32,string)\":{\"details\":\"The following `__callback` functions are just placeholders ideally     meant to be defined in child contract when proofs are used.     The function bodies simply silence compiler warnings.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/mg/bnpl-dapp/src/contracts/GetPrice.sol\":\"GetPrice\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/mg/bnpl-dapp/src/contracts/GetPrice.sol\":{\"keccak256\":\"0xac323109accec07c053b05af5e8762af3e0d04874e21bb48f17d1d1676b0e8a4\",\"urls\":[\"bzz-raw://8c15d974f8d1a2f7dc6a8267a9deed81aa931399e3de77db0215cc1edbb2312c\",\"dweb:/ipfs/QmW1pzdE1nMHG3uApJBP1B4n68Sjmhf2JpSsuFYCuEvHH9\"]},\"/Users/mg/bnpl-dapp/src/contracts/usingOraclize.sol\":{\"keccak256\":\"0xe1c90c4ffde92374bb53483ef438ee1cbea7e2a3bd1de89f8d4ad64e8cc4c772\",\"urls\":[\"bzz-raw://6bbbb5121f0d8d508ddc5cd0a8b0f890ce606f8aef0fb7265b3ff3be7d6a7764\",\"dweb:/ipfs/QmctjmE8XF9dgg5PVxm5uEXyWHQRMgkAsqBFTx6JRBufiq\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506113c1806100756000396000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806327dc297e14610067578063338cdca11461012c57806338bbfa501461013657806338be706d146102925780635829df43146102c0578063ccbac9f5146102de575b600080fd5b61012a6004803603604081101561007d57600080fd5b8101908080359060200190929190803590602001906401000000008111156100a457600080fd5b8201836020820111156100b657600080fd5b803590602001918460018302840111640100000000831117156100d857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506102fc565b005b61013461033f565b005b6102906004803603606081101561014c57600080fd5b81019080803590602001909291908035906020019064010000000081111561017357600080fd5b82018360208201111561018557600080fd5b803590602001918460018302840111640100000000831117156101a757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561020a57600080fd5b82018360208201111561021c57600080fd5b8035906020019184600183028401116401000000008311171561023e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506103a0565b005b6102be600480360360208110156102a857600080fd5b81019080803590602001909291905050506103c3565b005b6102c8610445565b6040518082815260200191505060405180910390f35b6102e661044b565b6040518082815260200191505060405180910390f35b61033b828260006040519080825280601f01601f1916602001820160405280156103355781602001600182028038833980820191505090505b506103a0565b5050565b610398603c6040518060400160405280600381526020017f55524c00000000000000000000000000000000000000000000000000000000008152506040518060e0016040528060a681526020016112e760a69139610451565b600681905550565b6000801b600360008060001b815260200190815260200160002081905550505050565b6103cb610997565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461040257600080fd5b806005819055507f6e1ea285d938f50940b045a76ae5cd13c9e6e1ff6b06be77013cfda2b3698cec6005546040518082815260200191505060405180910390a150565b60065481565b60055481565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806104d9575060006104d7600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610cb4565b145b156104ea576104e86000610cbf565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561055457600080fd5b505af1158015610568573d6000803e3d6000fd5b505050506040513d602081101561057e57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146106c757600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561064c57600080fd5b505af1158015610660573d6000803e3d6000fd5b505050506040513d602081101561067657600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889856040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561075657808201518184015260208101905061073b565b50505050905090810190601f1680156107835780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b1580156107a257600080fd5b505af11580156107b6573d6000803e3d6000fd5b505050506040513d60208110156107cc57600080fd5b8101908080519060200190929190505050905062030d403a02670de0b6b3a764000001811115610802576000801b915050610990565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663adf59f99828787876040518563ffffffff1660e01b8152600401808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b8381101561089c578082015181840152602081019050610881565b50505050905090810190601f1680156108c95780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b838110156109025780820151818401526020810190506108e7565b50505050905090810190601f16801561092f5780820380516001836020036101000a031916815260200191505b50955050505050506020604051808303818588803b15801561095057600080fd5b505af1158015610964573d6000803e3d6000fd5b50505050506040513d602081101561097b57600080fd5b81019080805190602001909291905050509150505b9392505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610a1f57506000610a1d600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610cb4565b145b15610a3057610a2e6000610cbf565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610a9a57600080fd5b505af1158015610aae573d6000803e3d6000fd5b505050506040513d6020811015610ac457600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610c0d57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610b9257600080fd5b505af1158015610ba6573d6000803e3d6000fd5b505050506040513d6020811015610bbc57600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff1660e01b815260040160206040518083038186803b158015610c7457600080fd5b505afa158015610c88573d6000803e3d6000fd5b505050506040513d6020811015610c9e57600080fd5b8101908080519060200190929190505050905090565b6000813b9050919050565b6000610cc9610cd0565b9050919050565b600080610cf0731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed610cb4565b1115610d9257731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610d896040518060400160405280600b81526020017f6574685f6d61696e6e6574000000000000000000000000000000000000000000815250611227565b60019050611224565b6000610db173c03a2615d5efaf5f49f60b7bb6583eaec212fdf1610cb4565b1115610e535773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610e4a6040518060400160405280600c81526020017f6574685f726f707374656e330000000000000000000000000000000000000000815250611227565b60019050611224565b6000610e7273b7a07bcf2ba2f2703b24c0691b5278999c59ac7e610cb4565b1115610f145773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610f0b6040518060400160405280600981526020017f6574685f6b6f76616e0000000000000000000000000000000000000000000000815250611227565b60019050611224565b6000610f3373146500cfd35b22e4a392fe0adc06de1a1368ed48610cb4565b1115610fd55773146500cfd35b22e4a392fe0adc06de1a1368ed48600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610fcc6040518060400160405280600b81526020017f6574685f72696e6b656279000000000000000000000000000000000000000000815250611227565b60019050611224565b6000610ff473a2998efd205fb9d4b4963afb70778d6354ad3a41610cb4565b11156110965773a2998efd205fb9d4b4963afb70778d6354ad3a41600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061108d6040518060400160405280600a81526020017f6574685f676f65726c6900000000000000000000000000000000000000000000815250611227565b60019050611224565b60006110b5736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475610cb4565b111561111957736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611224565b60006111387320e12a1f859b3feae5fb2a0a32c18f5a65555bbf610cb4565b111561119c577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611224565b60006111bb7351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa610cb4565b111561121f577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611224565b600090505b90565b806002908051906020019061123d929190611241565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061128257805160ff19168380011785556112b0565b828001600101855582156112b0579182015b828111156112af578251825591602001919060010190611294565b5b5090506112bd91906112c1565b5090565b6112e391905b808211156112df5760008160009055506001016112c7565b5090565b9056fe6a736f6e2868747470733a2f2f7777772e6b6f7265616578696d2e676f2e6b722f736974652f70726f6772616d2f66696e616e6369616c2f65786368616e67654a534f4e3f617574686b65793d356e5667484f62704b6b6e4871456a4d4b314c51306e4133435a414c6541507026736561726368646174653d323031383031303226646174613d41503031266375725f756e69743d555344292e302e6465616c5f6261735f72a265627a7a72315820a54a7475771ff40be8e061bf938e32ec4e5cc8b61057746f17449d671f3652ec64736f6c63430005100032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100625760003560e01c806327dc297e14610067578063338cdca11461012c57806338bbfa501461013657806338be706d146102925780635829df43146102c0578063ccbac9f5146102de575b600080fd5b61012a6004803603604081101561007d57600080fd5b8101908080359060200190929190803590602001906401000000008111156100a457600080fd5b8201836020820111156100b657600080fd5b803590602001918460018302840111640100000000831117156100d857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506102fc565b005b61013461033f565b005b6102906004803603606081101561014c57600080fd5b81019080803590602001909291908035906020019064010000000081111561017357600080fd5b82018360208201111561018557600080fd5b803590602001918460018302840111640100000000831117156101a757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561020a57600080fd5b82018360208201111561021c57600080fd5b8035906020019184600183028401116401000000008311171561023e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506103a0565b005b6102be600480360360208110156102a857600080fd5b81019080803590602001909291905050506103c3565b005b6102c8610445565b6040518082815260200191505060405180910390f35b6102e661044b565b6040518082815260200191505060405180910390f35b61033b828260006040519080825280601f01601f1916602001820160405280156103355781602001600182028038833980820191505090505b506103a0565b5050565b610398603c6040518060400160405280600381526020017f55524c00000000000000000000000000000000000000000000000000000000008152506040518060e0016040528060a681526020016112e760a69139610451565b600681905550565b6000801b600360008060001b815260200190815260200160002081905550505050565b6103cb610997565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461040257600080fd5b806005819055507f6e1ea285d938f50940b045a76ae5cd13c9e6e1ff6b06be77013cfda2b3698cec6005546040518082815260200191505060405180910390a150565b60065481565b60055481565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614806104d9575060006104d7600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610cb4565b145b156104ea576104e86000610cbf565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561055457600080fd5b505af1158015610568573d6000803e3d6000fd5b505050506040513d602081101561057e57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16146106c757600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561064c57600080fd5b505af1158015610660573d6000803e3d6000fd5b505050506040513d602081101561067657600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663524f3889856040518263ffffffff1660e01b81526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561075657808201518184015260208101905061073b565b50505050905090810190601f1680156107835780820380516001836020036101000a031916815260200191505b5092505050602060405180830381600087803b1580156107a257600080fd5b505af11580156107b6573d6000803e3d6000fd5b505050506040513d60208110156107cc57600080fd5b8101908080519060200190929190505050905062030d403a02670de0b6b3a764000001811115610802576000801b915050610990565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663adf59f99828787876040518563ffffffff1660e01b8152600401808481526020018060200180602001838103835285818151815260200191508051906020019080838360005b8381101561089c578082015181840152602081019050610881565b50505050905090810190601f1680156108c95780820380516001836020036101000a031916815260200191505b50838103825284818151815260200191508051906020019080838360005b838110156109025780820151818401526020810190506108e7565b50505050905090810190601f16801561092f5780820380516001836020036101000a031916815260200191505b50955050505050506020604051808303818588803b15801561095057600080fd5b505af1158015610964573d6000803e3d6000fd5b50505050506040513d602081101561097b57600080fd5b81019080805190602001909291905050509150505b9392505050565b60008073ffffffffffffffffffffffffffffffffffffffff16600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161480610a1f57506000610a1d600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610cb4565b145b15610a3057610a2e6000610cbf565b505b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610a9a57600080fd5b505af1158015610aae573d6000803e3d6000fd5b505050506040513d6020811015610ac457600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614610c0d57600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166338cc48316040518163ffffffff1660e01b8152600401602060405180830381600087803b158015610b9257600080fd5b505af1158015610ba6573d6000803e3d6000fd5b505050506040513d6020811015610bbc57600080fd5b81019080805190602001909291905050506000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663c281d19e6040518163ffffffff1660e01b815260040160206040518083038186803b158015610c7457600080fd5b505afa158015610c88573d6000803e3d6000fd5b505050506040513d6020811015610c9e57600080fd5b8101908080519060200190929190505050905090565b6000813b9050919050565b6000610cc9610cd0565b9050919050565b600080610cf0731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed610cb4565b1115610d9257731d3b2638a7cc9f2cb3d298a3da7a90b67e5506ed600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610d896040518060400160405280600b81526020017f6574685f6d61696e6e6574000000000000000000000000000000000000000000815250611227565b60019050611224565b6000610db173c03a2615d5efaf5f49f60b7bb6583eaec212fdf1610cb4565b1115610e535773c03a2615d5efaf5f49f60b7bb6583eaec212fdf1600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610e4a6040518060400160405280600c81526020017f6574685f726f707374656e330000000000000000000000000000000000000000815250611227565b60019050611224565b6000610e7273b7a07bcf2ba2f2703b24c0691b5278999c59ac7e610cb4565b1115610f145773b7a07bcf2ba2f2703b24c0691b5278999c59ac7e600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610f0b6040518060400160405280600981526020017f6574685f6b6f76616e0000000000000000000000000000000000000000000000815250611227565b60019050611224565b6000610f3373146500cfd35b22e4a392fe0adc06de1a1368ed48610cb4565b1115610fd55773146500cfd35b22e4a392fe0adc06de1a1368ed48600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550610fcc6040518060400160405280600b81526020017f6574685f72696e6b656279000000000000000000000000000000000000000000815250611227565b60019050611224565b6000610ff473a2998efd205fb9d4b4963afb70778d6354ad3a41610cb4565b11156110965773a2998efd205fb9d4b4963afb70778d6354ad3a41600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061108d6040518060400160405280600a81526020017f6574685f676f65726c6900000000000000000000000000000000000000000000815250611227565b60019050611224565b60006110b5736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475610cb4565b111561111957736f485c8bf6fc43ea212e93bbf8ce046c7f1cb475600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611224565b60006111387320e12a1f859b3feae5fb2a0a32c18f5a65555bbf610cb4565b111561119c577320e12a1f859b3feae5fb2a0a32c18f5a65555bbf600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611224565b60006111bb7351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa610cb4565b111561121f577351efaf4c8b3c9afbd5ab9f4bbc82784ab6ef8faa600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060019050611224565b600090505b90565b806002908051906020019061123d929190611241565b5050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061128257805160ff19168380011785556112b0565b828001600101855582156112b0579182015b828111156112af578251825591602001919060010190611294565b5b5090506112bd91906112c1565b5090565b6112e391905b808211156112df5760008160009055506001016112c7565b5090565b9056fe6a736f6e2868747470733a2f2f7777772e6b6f7265616578696d2e676f2e6b722f736974652f70726f6772616d2f66696e616e6369616c2f65786368616e67654a534f4e3f617574686b65793d356e5667484f62704b6b6e4871456a4d4b314c51306e4133435a414c6541507026736561726368646174653d323031383031303226646174613d41503031266375725f756e69743d555344292e302e6465616c5f6261735f72a265627a7a72315820a54a7475771ff40be8e061bf938e32ec4e5cc8b61057746f17449d671f3652ec64736f6c63430005100032",
  "sourceMap": "116:904:4:-;;;248:100;8:9:-1;5:2;;;30:1;27;20:12;5:2;248:100:4;301:42;273:3;;:71;;;;;;;;;;;;;;;;;;116:904;;;;;;",
  "deployedSourceMap": "116:904:4:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;116:904:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15310:122:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15310:122:12;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;15310:122:12;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;15310:122:12;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;15310:122:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;15310:122:12;;;;;;;;;;;;;;;:::i;:::-;;351:331:4;;;:::i;:::-;;15438:178:12;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15438:178:12;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;15438:178:12;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;15438:178:12;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;15438:178:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;15438:178:12;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;15438:178:12;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;15438:178:12;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;15438:178:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;15438:178:12;;;;;;;;;;;;;;;:::i;:::-;;859:158:4;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;859:158:4;;;;;;;;;;;;;;;;;:::i;:::-;;184:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;154:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;15310:122:12;15385:40;15396:5;15403:7;15422:1;15412:12;;;;;;;;;;;;;;;;;;;;;;;;;29:1:-1;21:6;17:14;116:4;104:10;96:6;87:34;147:4;139:6;135:17;125:27;;0:156;15412:12:12;;;;15385:10;:40::i;:::-;15310:122;;:::o;351:331:4:-;476:201;491:2;476:201;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:14;:201::i;:::-;463:10;:214;;;;351:331::o;15438:178:12:-;15607:1;15599:10;;15562:22;:34;15593:1;15585:10;;15562:34;;;;;;;;;;;:47;;;;15438:178;;;:::o;859:158:4:-;929:20;:18;:20::i;:::-;915:34;;:10;:34;;;907:43;;;;;;970:7;955:12;:22;;;;993:20;1000:12;;993:20;;;;;;;;;;;;;;;;;;859:158;:::o;184:25::-;;;;:::o;154:27::-;;;;:::o;16332:379:12:-;16450:11;11838:1;11814:26;;11822:3;;;;;;;;;;;11814:26;;;11813:64;;;;11875:1;11846:25;11866:3;;;;;;;;;;;11846:11;:25::i;:::-;:30;11813:64;11809:130;;;11893:35;11470:1;11893:19;:35::i;:::-;;11809:130;11973:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11973:16:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11973:16:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11973:16:12;;;;;;;;;;;;;;;;11952:37;;11960:8;;;;;;;;;;;11952:37;;;11948:106;;12026:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12026:16:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12026:16:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12026:16:12;;;;;;;;;;;;;;;;12005:8;;:38;;;;;;;;;;;;;;;;;;11948:106;16473:10;16486:8;;;;;;;;;;;:17;;;16504:11;16486:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;16486:30:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16486:30:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16486:30:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16486:30:12;;;;;;;;;;;;;;;;16473:43;;16562:6;16548:11;:20;16538:7;:30;16530:5;:38;16526:104;;;16591:1;16584:8;;;;;;;16526:104;16646:8;;;;;;;;;;;:14;;;16667:5;16674:10;16686:11;16699:4;16646:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;16646:58:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;16646:58:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16646:58:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16646:58:12;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16646:58:12;;;;;;;;;;;;;;;;16639:65;;;12063:1;16332:379;;;;;:::o;37170:130::-;37230:24;11838:1;11814:26;;11822:3;;;;;;;;;;;11814:26;;;11813:64;;;;11875:1;11846:25;11866:3;;;;;;;;;;;11846:11;:25::i;:::-;:30;11813:64;11809:130;;;11893:35;11470:1;11893:19;:35::i;:::-;;11809:130;11973:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;11973:16:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;11973:16:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11973:16:12;;;;;;;;;;;;;;;;11952:37;;11960:8;;;;;;;;;;;11952:37;;;11948:106;;12026:3;;;;;;;;;;;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;12026:16:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;12026:16:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12026:16:12;;;;;;;;;;;;;;;;12005:8;;:38;;;;;;;;;;;;;;;;;;11948:106;37273:8;;;;;;;;;;;:18;;;:20;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;37273:20:12;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;37273:20:12;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;37273:20:12;;;;;;;;;;;;;;;;37266:27;;37170:130;:::o;37306:147::-;37365:10;37431:5;37419:18;37410:27;;37396:51;;;:::o;12546:205::-;12611:16;12723:21;:19;:21::i;:::-;12716:28;;12546:205;;;:::o;13025:2047::-;13074:16;13164:1;13106:55;13118:42;13106:11;:55::i;:::-;:59;13102:248;;;13219:42;13191:3;;:71;;;;;;;;;;;;;;;;;;13276:38;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;13335:4;13328:11;;;;13102:248;13421:1;13363:55;13375:42;13363:11;:55::i;:::-;:59;13359:257;;;13484:42;13456:3;;:71;;;;;;;;;;;;;;;;;;13541:39;;;;;;;;;;;;;;;;;;:23;:39::i;:::-;13601:4;13594:11;;;;13359:257;13687:1;13629:55;13641:42;13629:11;:55::i;:::-;:59;13625:252;;;13748:42;13720:3;;:71;;;;;;;;;;;;;;;;;;13805:36;;;;;;;;;;;;;;;;;;:23;:36::i;:::-;13862:4;13855:11;;;;13625:252;13948:1;13890:55;13902:42;13890:11;:55::i;:::-;:59;13886:256;;;14011:42;13983:3;;:71;;;;;;;;;;;;;;;;;;14068:38;;;;;;;;;;;;;;;;;;:23;:38::i;:::-;14127:4;14120:11;;;;13886:256;14213:1;14155:55;14167:42;14155:11;:55::i;:::-;:59;14151:254;;;14275:42;14247:3;;:71;;;;;;;;;;;;;;;;;;14332:37;;;;;;;;;;;;;;;;;;:23;:37::i;:::-;14390:4;14383:11;;;;14151:254;14476:1;14418:55;14430:42;14418:11;:55::i;:::-;:59;14414:204;;;14539:42;14511:3;;:71;;;;;;;;;;;;;;;;;;14603:4;14596:11;;;;14414:204;14689:1;14631:55;14643:42;14631:11;:55::i;:::-;:59;14627:203;;;14751:42;14723:3;;:71;;;;;;;;;;;;;;;;;;14815:4;14808:11;;;;14627:203;14901:1;14843:55;14855:42;14843:11;:55::i;:::-;:59;14839:205;;;14965:42;14937:3;;:71;;;;;;;;;;;;;;;;;;15029:4;15022:11;;;;14839:205;15060:5;15053:12;;13025:2047;;:::o;12757:125::-;12862:13;12838:21;:37;;;;;;;;;;;;:::i;:::-;;12757:125;:::o;116:904:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.0;\n//import \"github.com/oraclize/ethereum-api/oraclizeAPI.sol\";\nimport \"./usingOraclize.sol\";\n\ncontract GetPrice is usingOraclize {\n\tuint256 public randomNumber;\n\tbytes32 public request_id;\n\n    event Action(uint256 result);\n\n\tconstructor() public {\n\t\tOAR = OraclizeAddrResolverI(0x6f485C8BF6fc43eA212E93BBF8ce046C7f1cb475);\n\t}\n\n\tfunction request() public {\n\t\t//request_id = oraclize_query(\"WolframAlpha\", \"random number between 1 and 6\");\n\t\trequest_id = oraclize_query(60, \"URL\",\n  \t\t\t\t\"json(https://www.koreaexim.go.kr/site/program/financial/exchangeJSON?authkey=5nVgHObpKknHqEjMK1LQ0nA3CZALeAPp&searchdate=20180102&data=AP01&cur_unit=USD).0.deal_bas_r\");\n\n\t}\n\n    //json(https://www.koreaexim.go.kr/site/program/financial/exchangeJSON?authkey=5nVgHObpKknHqEjMK1LQ0nA3CZALeAPp&searchdate=20180102&data=AP01&cur_unit=USD).0.deal_bas_r\n\n\tfunction __callback(uint256 _result) public {\n\t\trequire(msg.sender == oraclize_cbAddress());\n\n\t\trandomNumber = _result;\n\n        emit Action(randomNumber);\n\t}\n\n}\n\n// pragma solidity ^0.4.25;\n// import \"github.com/oraclize/ethereum-api/oraclizeAPI_0.4.25.sol\";\n\n// contract 환율계산함수 is usingOraclize {\n// string public exchage_rates;\n// event NewOraclizeQuery(string description);\n//      event NewSomeValue(string value);\n// constructor() public {\n//         update();\n//     }\n// function __callback(bytes32 myid, string result) public {\n//         (myid);\n//         require (msg.sender == oraclize_cbAddress());\n//         exchage_rates = result;\n//         emit NewSomeValue(exchage_rates);\n//         // do something with exchage_rates\n//     }\n// function update() public payable {\n//         if (oraclize_getPrice(\"URL\") > address(this).balance) {\n//             emit NewOraclizeQuery(\"Oraclize query was NOT sent, please add some ETH to cover for the query fee\");\n//         } else {\n//             emit NewOraclizeQuery(\"Oraclize query was sent, standing by for the answer exchange_rate\");\n//             oraclize_query(\"URL\", \"[URL, 검색어, 수식 등]\");\n//         }\n//     }\n// }\n\n\n/*\npragma solidity ^0.4.1;\nimport \"github.com/oraclize/ethereum-api/oraclizeAPI.sol\";\n\n\n//   \"oraclize_\" prepended methods indicate inheritance from \"usingOraclize\"\n \ncontract EthUsdPriceTicker is usingOraclize {\n\n    uint public ethUsd;\n\n    event newOraclizeQuery(string description);\n    event newCallbackResult(string result);\n\n    function EthUsdPriceTicker() payable {\n        // signals TLSN proof generation and storage on IPFS\n        oraclize_setProof(proofType_TLSNotary | proofStorage_IPFS);\n\n        // requests query\n        queryTicker();\n    }\n\n    function __callback(bytes32 _queryId, string _result, bytes _proof) public {\n        if (msg.sender != oraclize_cbAddress()) throw;\n        newCallbackResult(_result);\n\n        \n        // * Parse the result string into an unsigned integer for on-chain use.\n        // * Uses inherited \"parseInt\" helper from \"usingOraclize\", allowing for\n        // * a string result such as \"123.45\" to be converted to uint 12345.\n        \n        ethUsd = parseInt(_result, 2);\n\n        // called from callback since we're polling the price\n        queryTicker();\n    }\n\n    function queryTicker() public payable {\n        if (oraclize_getPrice(\"URL\") > this.balance) {\n            newOraclizeQuery(\"Oraclize query was NOT sent, please add some ETH\n                to cover for the query fee\");\n        } else {\n            newOraclizeQuery(\"Oraclize query was sent, standing by for the\n                answer...\");\n\n            // query params are (delay in seconds, datasource type,\n            // datasource argument)\n            // specifies JSONPath, to fetch specific portion of JSON API result\n            oraclize_query(60 * 10, \"URL\",\n                \"json(https://min-api.cryptocompare.com/data/price?\\\n                fsym=ETH&tsyms=USD,EUR,GBP).USD\");\n        }\n    }\n}\n\n*/",
  "sourcePath": "/Users/mg/bnpl-dapp/src/contracts/GetPrice.sol",
  "ast": {
    "absolutePath": "/Users/mg/bnpl-dapp/src/contracts/GetPrice.sol",
    "exportedSymbols": {
      "GetPrice": [
        3824
      ]
    },
    "id": 3825,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3768,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "absolutePath": "/Users/mg/bnpl-dapp/src/contracts/usingOraclize.sol",
        "file": "./usingOraclize.sol",
        "id": 3769,
        "nodeType": "ImportDirective",
        "scope": 3825,
        "sourceUnit": 11563,
        "src": "85:29:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3770,
              "name": "usingOraclize",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 11562,
              "src": "137:13:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_usingOraclize_$11562",
                "typeString": "contract usingOraclize"
              }
            },
            "id": 3771,
            "nodeType": "InheritanceSpecifier",
            "src": "137:13:4"
          }
        ],
        "contractDependencies": [
          11562
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 3824,
        "linearizedBaseContracts": [
          3824,
          11562
        ],
        "name": "GetPrice",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 3773,
            "name": "randomNumber",
            "nodeType": "VariableDeclaration",
            "scope": 3824,
            "src": "154:27:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 3772,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "154:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 3775,
            "name": "request_id",
            "nodeType": "VariableDeclaration",
            "scope": 3824,
            "src": "184:25:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 3774,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "184:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 3779,
            "name": "Action",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 3778,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3777,
                  "indexed": false,
                  "name": "result",
                  "nodeType": "VariableDeclaration",
                  "scope": 3779,
                  "src": "229:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3776,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "229:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "228:16:4"
            },
            "src": "216:29:4"
          },
          {
            "body": {
              "id": 3788,
              "nodeType": "Block",
              "src": "269:79:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3782,
                      "name": "OAR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 5928,
                      "src": "273:3:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$5390",
                        "typeString": "contract OraclizeAddrResolverI"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "307836663438354338424636666334336541323132453933424246386365303436433766316362343735",
                          "id": 3784,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "301:42:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          "value": "0x6f485C8BF6fc43eA212E93BBF8ce046C7f1cb475"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        ],
                        "id": 3783,
                        "name": "OraclizeAddrResolverI",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 5390,
                        "src": "279:21:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OraclizeAddrResolverI_$5390_$",
                          "typeString": "type(contract OraclizeAddrResolverI)"
                        }
                      },
                      "id": 3785,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "279:65:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$5390",
                        "typeString": "contract OraclizeAddrResolverI"
                      }
                    },
                    "src": "273:71:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OraclizeAddrResolverI_$5390",
                      "typeString": "contract OraclizeAddrResolverI"
                    }
                  },
                  "id": 3787,
                  "nodeType": "ExpressionStatement",
                  "src": "273:71:4"
                }
              ]
            },
            "documentation": null,
            "id": 3789,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3780,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "259:2:4"
            },
            "returnParameters": {
              "id": 3781,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "269:0:4"
            },
            "scope": 3824,
            "src": "248:100:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3800,
              "nodeType": "Block",
              "src": "377:305:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3792,
                      "name": "request_id",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3775,
                      "src": "463:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "3630",
                          "id": 3794,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "491:2:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_60_by_1",
                            "typeString": "int_const 60"
                          },
                          "value": "60"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "55524c",
                          "id": 3795,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "495:5:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          },
                          "value": "URL"
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "6a736f6e2868747470733a2f2f7777772e6b6f7265616578696d2e676f2e6b722f736974652f70726f6772616d2f66696e616e6369616c2f65786368616e67654a534f4e3f617574686b65793d356e5667484f62704b6b6e4871456a4d4b314c51306e4133435a414c6541507026736561726368646174653d323031383031303226646174613d41503031266375725f756e69743d555344292e302e6465616c5f6261735f72",
                          "id": 3796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "508:168:4",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_e27760972efdf3b36fcebe5ee97b452403b0e4a805b96b440424f6400540c97e",
                            "typeString": "literal_string \"json(https://www.koreaexim.go.kr/site/program/financial/exchangeJSON?authkey=5nVgHObpKknHqEjMK1LQ0nA3CZALeAPp&searchdate=20180102&data=AP01&cur_unit=USD).0.deal_bas_r\""
                          },
                          "value": "json(https://www.koreaexim.go.kr/site/program/financial/exchangeJSON?authkey=5nVgHObpKknHqEjMK1LQ0nA3CZALeAPp&searchdate=20180102&data=AP01&cur_unit=USD).0.deal_bas_r"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_60_by_1",
                            "typeString": "int_const 60"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                            "typeString": "literal_string \"URL\""
                          },
                          {
                            "typeIdentifier": "t_stringliteral_e27760972efdf3b36fcebe5ee97b452403b0e4a805b96b440424f6400540c97e",
                            "typeString": "literal_string \"json(https://www.koreaexim.go.kr/site/program/financial/exchangeJSON?authkey=5nVgHObpKknHqEjMK1LQ0nA3CZALeAPp&searchdate=20180102&data=AP01&cur_unit=USD).0.deal_bas_r\""
                          }
                        ],
                        "id": 3793,
                        "name": "oraclize_query",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [
                          6389,
                          6432,
                          6479,
                          6524,
                          6568,
                          6614,
                          6664,
                          6712,
                          6760,
                          6810,
                          6864,
                          6916,
                          6953,
                          6993,
                          7036,
                          7076,
                          7121,
                          7169,
                          7220,
                          7268,
                          7321,
                          7377,
                          7436,
                          7492,
                          7553,
                          7617,
                          7684,
                          7748,
                          7817,
                          7889,
                          7964,
                          8036,
                          8084,
                          8134,
                          8188,
                          8240,
                          8277,
                          8317,
                          8360,
                          8400,
                          8445,
                          8493,
                          8544,
                          8592,
                          8645,
                          8701,
                          8760,
                          8816,
                          8877,
                          8941,
                          9008,
                          9072,
                          9141,
                          9213,
                          9288,
                          9360
                        ],
                        "referencedDeclaration": 6432,
                        "src": "476:14:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (uint256,string memory,string memory) returns (bytes32)"
                        }
                      },
                      "id": 3797,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "476:201:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "463:214:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 3799,
                  "nodeType": "ExpressionStatement",
                  "src": "463:214:4"
                }
              ]
            },
            "documentation": null,
            "id": 3801,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "request",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3790,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "367:2:4"
            },
            "returnParameters": {
              "id": 3791,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "377:0:4"
            },
            "scope": 3824,
            "src": "351:331:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 3822,
              "nodeType": "Block",
              "src": "903:114:4",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3811,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 3807,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 11705,
                            "src": "915:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 3808,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "915:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 3809,
                            "name": "oraclize_cbAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 9385,
                            "src": "929:18:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_address_$",
                              "typeString": "function () returns (address)"
                            }
                          },
                          "id": 3810,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "929:20:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "915:34:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 3806,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        11708,
                        11709
                      ],
                      "referencedDeclaration": 11708,
                      "src": "907:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 3812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "907:43:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3813,
                  "nodeType": "ExpressionStatement",
                  "src": "907:43:4"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 3816,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 3814,
                      "name": "randomNumber",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3773,
                      "src": "955:12:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 3815,
                      "name": "_result",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3803,
                      "src": "970:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "955:22:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 3817,
                  "nodeType": "ExpressionStatement",
                  "src": "955:22:4"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3819,
                        "name": "randomNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3773,
                        "src": "1000:12:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3818,
                      "name": "Action",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 3779,
                      "src": "993:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "993:20:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3821,
                  "nodeType": "EmitStatement",
                  "src": "988:25:4"
                }
              ]
            },
            "documentation": null,
            "id": 3823,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "__callback",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 3804,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3803,
                  "name": "_result",
                  "nodeType": "VariableDeclaration",
                  "scope": 3823,
                  "src": "879:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3802,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "879:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "878:17:4"
            },
            "returnParameters": {
              "id": 3805,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "903:0:4"
            },
            "scope": 3824,
            "src": "859:158:4",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 3825,
        "src": "116:904:4"
      }
    ],
    "src": "0:3903:4"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/Users/mg/bnpl-dapp/src/contracts/GetPrice.sol",
      "exportedSymbols": {
        "GetPrice": [
          3824
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.5",
            ".0"
          ]
        },
        "id": 3768,
        "name": "PragmaDirective",
        "src": "0:23:4"
      },
      {
        "attributes": {
          "SourceUnit": 11563,
          "absolutePath": "/Users/mg/bnpl-dapp/src/contracts/usingOraclize.sol",
          "file": "./usingOraclize.sol",
          "scope": 3825,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 3769,
        "name": "ImportDirective",
        "src": "85:29:4"
      },
      {
        "attributes": {
          "contractDependencies": [
            11562
          ],
          "contractKind": "contract",
          "documentation": null,
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            3824,
            11562
          ],
          "name": "GetPrice",
          "scope": 3825
        },
        "children": [
          {
            "attributes": {
              "arguments": null
            },
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "usingOraclize",
                  "referencedDeclaration": 11562,
                  "type": "contract usingOraclize"
                },
                "id": 3770,
                "name": "UserDefinedTypeName",
                "src": "137:13:4"
              }
            ],
            "id": 3771,
            "name": "InheritanceSpecifier",
            "src": "137:13:4"
          },
          {
            "attributes": {
              "constant": false,
              "name": "randomNumber",
              "scope": 3824,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "uint256",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 3772,
                "name": "ElementaryTypeName",
                "src": "154:7:4"
              }
            ],
            "id": 3773,
            "name": "VariableDeclaration",
            "src": "154:27:4"
          },
          {
            "attributes": {
              "constant": false,
              "name": "request_id",
              "scope": 3824,
              "stateVariable": true,
              "storageLocation": "default",
              "type": "bytes32",
              "value": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "name": "bytes32",
                  "type": "bytes32"
                },
                "id": 3774,
                "name": "ElementaryTypeName",
                "src": "184:7:4"
              }
            ],
            "id": 3775,
            "name": "VariableDeclaration",
            "src": "184:25:4"
          },
          {
            "attributes": {
              "anonymous": false,
              "documentation": null,
              "name": "Action"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "indexed": false,
                      "name": "result",
                      "scope": 3779,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 3776,
                        "name": "ElementaryTypeName",
                        "src": "229:7:4"
                      }
                    ],
                    "id": 3777,
                    "name": "VariableDeclaration",
                    "src": "229:14:4"
                  }
                ],
                "id": 3778,
                "name": "ParameterList",
                "src": "228:16:4"
              }
            ],
            "id": 3779,
            "name": "EventDefinition",
            "src": "216:29:4"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": true,
              "kind": "constructor",
              "modifiers": [
                null
              ],
              "name": "",
              "scope": 3824,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 3780,
                "name": "ParameterList",
                "src": "259:2:4"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 3781,
                "name": "ParameterList",
                "src": "269:0:4"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "contract OraclizeAddrResolverI"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 5928,
                              "type": "contract OraclizeAddrResolverI",
                              "value": "OAR"
                            },
                            "id": 3782,
                            "name": "Identifier",
                            "src": "273:3:4"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "contract OraclizeAddrResolverI",
                              "type_conversion": true
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address_payable",
                                      "typeString": "address payable"
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 5390,
                                  "type": "type(contract OraclizeAddrResolverI)",
                                  "value": "OraclizeAddrResolverI"
                                },
                                "id": 3783,
                                "name": "Identifier",
                                "src": "279:21:4"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "307836663438354338424636666334336541323132453933424246386365303436433766316362343735",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "address payable",
                                  "value": "0x6f485C8BF6fc43eA212E93BBF8ce046C7f1cb475"
                                },
                                "id": 3784,
                                "name": "Literal",
                                "src": "301:42:4"
                              }
                            ],
                            "id": 3785,
                            "name": "FunctionCall",
                            "src": "279:65:4"
                          }
                        ],
                        "id": 3786,
                        "name": "Assignment",
                        "src": "273:71:4"
                      }
                    ],
                    "id": 3787,
                    "name": "ExpressionStatement",
                    "src": "273:71:4"
                  }
                ],
                "id": 3788,
                "name": "Block",
                "src": "269:79:4"
              }
            ],
            "id": 3789,
            "name": "FunctionDefinition",
            "src": "248:100:4"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "request",
              "scope": 3824,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 3790,
                "name": "ParameterList",
                "src": "367:2:4"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 3791,
                "name": "ParameterList",
                "src": "377:0:4"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "bytes32"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 3775,
                              "type": "bytes32",
                              "value": "request_id"
                            },
                            "id": 3792,
                            "name": "Identifier",
                            "src": "463:10:4"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "bytes32",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_60_by_1",
                                      "typeString": "int_const 60"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_96388ed71ebb5d970d8c40d08f33931fc80bd2768fd60f12b78e085d12441b0e",
                                      "typeString": "literal_string \"URL\""
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_e27760972efdf3b36fcebe5ee97b452403b0e4a805b96b440424f6400540c97e",
                                      "typeString": "literal_string \"json(https://www.koreaexim.go.kr/site/program/financial/exchangeJSON?authkey=5nVgHObpKknHqEjMK1LQ0nA3CZALeAPp&searchdate=20180102&data=AP01&cur_unit=USD).0.deal_bas_r\""
                                    }
                                  ],
                                  "overloadedDeclarations": [
                                    6389,
                                    6432,
                                    6479,
                                    6524,
                                    6568,
                                    6614,
                                    6664,
                                    6712,
                                    6760,
                                    6810,
                                    6864,
                                    6916,
                                    6953,
                                    6993,
                                    7036,
                                    7076,
                                    7121,
                                    7169,
                                    7220,
                                    7268,
                                    7321,
                                    7377,
                                    7436,
                                    7492,
                                    7553,
                                    7617,
                                    7684,
                                    7748,
                                    7817,
                                    7889,
                                    7964,
                                    8036,
                                    8084,
                                    8134,
                                    8188,
                                    8240,
                                    8277,
                                    8317,
                                    8360,
                                    8400,
                                    8445,
                                    8493,
                                    8544,
                                    8592,
                                    8645,
                                    8701,
                                    8760,
                                    8816,
                                    8877,
                                    8941,
                                    9008,
                                    9072,
                                    9141,
                                    9213,
                                    9288,
                                    9360
                                  ],
                                  "referencedDeclaration": 6432,
                                  "type": "function (uint256,string memory,string memory) returns (bytes32)",
                                  "value": "oraclize_query"
                                },
                                "id": 3793,
                                "name": "Identifier",
                                "src": "476:14:4"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "3630",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 60",
                                  "value": "60"
                                },
                                "id": 3794,
                                "name": "Literal",
                                "src": "491:2:4"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "55524c",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "string",
                                  "type": "literal_string \"URL\"",
                                  "value": "URL"
                                },
                                "id": 3795,
                                "name": "Literal",
                                "src": "495:5:4"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "6a736f6e2868747470733a2f2f7777772e6b6f7265616578696d2e676f2e6b722f736974652f70726f6772616d2f66696e616e6369616c2f65786368616e67654a534f4e3f617574686b65793d356e5667484f62704b6b6e4871456a4d4b314c51306e4133435a414c6541507026736561726368646174653d323031383031303226646174613d41503031266375725f756e69743d555344292e302e6465616c5f6261735f72",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "string",
                                  "type": "literal_string \"json(https://www.koreaexim.go.kr/site/program/financial/exchangeJSON?authkey=5nVgHObpKknHqEjMK1LQ0nA3CZALeAPp&searchdate=20180102&data=AP01&cur_unit=USD).0.deal_bas_r\"",
                                  "value": "json(https://www.koreaexim.go.kr/site/program/financial/exchangeJSON?authkey=5nVgHObpKknHqEjMK1LQ0nA3CZALeAPp&searchdate=20180102&data=AP01&cur_unit=USD).0.deal_bas_r"
                                },
                                "id": 3796,
                                "name": "Literal",
                                "src": "508:168:4"
                              }
                            ],
                            "id": 3797,
                            "name": "FunctionCall",
                            "src": "476:201:4"
                          }
                        ],
                        "id": 3798,
                        "name": "Assignment",
                        "src": "463:214:4"
                      }
                    ],
                    "id": 3799,
                    "name": "ExpressionStatement",
                    "src": "463:214:4"
                  }
                ],
                "id": 3800,
                "name": "Block",
                "src": "377:305:4"
              }
            ],
            "id": 3801,
            "name": "FunctionDefinition",
            "src": "351:331:4"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "__callback",
              "scope": 3824,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "public"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "_result",
                      "scope": 3823,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 3802,
                        "name": "ElementaryTypeName",
                        "src": "879:7:4"
                      }
                    ],
                    "id": 3803,
                    "name": "VariableDeclaration",
                    "src": "879:15:4"
                  }
                ],
                "id": 3804,
                "name": "ParameterList",
                "src": "878:17:4"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 3805,
                "name": "ParameterList",
                "src": "903:0:4"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              ],
                              "overloadedDeclarations": [
                                11708,
                                11709
                              ],
                              "referencedDeclaration": 11708,
                              "type": "function (bool) pure",
                              "value": "require"
                            },
                            "id": 3806,
                            "name": "Identifier",
                            "src": "907:7:4"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "operator": "==",
                              "type": "bool"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sender",
                                  "referencedDeclaration": null,
                                  "type": "address payable"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 11705,
                                      "type": "msg",
                                      "value": "msg"
                                    },
                                    "id": 3807,
                                    "name": "Identifier",
                                    "src": "915:3:4"
                                  }
                                ],
                                "id": 3808,
                                "name": "MemberAccess",
                                "src": "915:10:4"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    null
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "isStructConstructorCall": false,
                                  "lValueRequested": false,
                                  "names": [
                                    null
                                  ],
                                  "type": "address",
                                  "type_conversion": false
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": [
                                        null
                                      ],
                                      "overloadedDeclarations": [
                                        null
                                      ],
                                      "referencedDeclaration": 9385,
                                      "type": "function () returns (address)",
                                      "value": "oraclize_cbAddress"
                                    },
                                    "id": 3809,
                                    "name": "Identifier",
                                    "src": "929:18:4"
                                  }
                                ],
                                "id": 3810,
                                "name": "FunctionCall",
                                "src": "929:20:4"
                              }
                            ],
                            "id": 3811,
                            "name": "BinaryOperation",
                            "src": "915:34:4"
                          }
                        ],
                        "id": 3812,
                        "name": "FunctionCall",
                        "src": "907:43:4"
                      }
                    ],
                    "id": 3813,
                    "name": "ExpressionStatement",
                    "src": "907:43:4"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 3773,
                              "type": "uint256",
                              "value": "randomNumber"
                            },
                            "id": 3814,
                            "name": "Identifier",
                            "src": "955:12:4"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 3803,
                              "type": "uint256",
                              "value": "_result"
                            },
                            "id": 3815,
                            "name": "Identifier",
                            "src": "970:7:4"
                          }
                        ],
                        "id": 3816,
                        "name": "Assignment",
                        "src": "955:22:4"
                      }
                    ],
                    "id": 3817,
                    "name": "ExpressionStatement",
                    "src": "955:22:4"
                  },
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "isStructConstructorCall": false,
                          "lValueRequested": false,
                          "names": [
                            null
                          ],
                          "type": "tuple()",
                          "type_conversion": false
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 3779,
                              "type": "function (uint256)",
                              "value": "Action"
                            },
                            "id": 3818,
                            "name": "Identifier",
                            "src": "993:6:4"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 3773,
                              "type": "uint256",
                              "value": "randomNumber"
                            },
                            "id": 3819,
                            "name": "Identifier",
                            "src": "1000:12:4"
                          }
                        ],
                        "id": 3820,
                        "name": "FunctionCall",
                        "src": "993:20:4"
                      }
                    ],
                    "id": 3821,
                    "name": "EmitStatement",
                    "src": "988:25:4"
                  }
                ],
                "id": 3822,
                "name": "Block",
                "src": "903:114:4"
              }
            ],
            "id": 3823,
            "name": "FunctionDefinition",
            "src": "859:158:4"
          }
        ],
        "id": 3824,
        "name": "ContractDefinition",
        "src": "116:904:4"
      }
    ],
    "id": 3825,
    "name": "SourceUnit",
    "src": "0:3903:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {
        "0x6e1ea285d938f50940b045a76ae5cd13c9e6e1ff6b06be77013cfda2b3698cec": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "result",
              "type": "uint256"
            }
          ],
          "name": "Action",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x090E8a2DafF524bA6A6fe84e5992e378E9580BCd",
      "transactionHash": "0x62b6d4fba17402ed8cf370630b2a43afd336a847682edf0e6c5eaabcf4052da8"
    }
  },
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-06-21T15:55:21.698Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "__callback(bytes32,string)": {
        "details": "The following `__callback` functions are just placeholders ideally     meant to be defined in child contract when proofs are used.     The function bodies simply silence compiler warnings."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}